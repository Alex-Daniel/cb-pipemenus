# cb-include.cfg - Variables and functions commonly used in custom scripts for
# CrunchBang GNU/Linux <http://crunchbanglinux.org/>.

# Usage: say TEXT DELAY_AFTER_TEXT. You can omit third parameter.
say() {
    clear
    echo "$1" | fold -s -w 71 | sed 's/^/  /' # wraps text nicely and adds two leading spaces
    sleep "${2-0}"
}

# Usage: promt TEXT Y|N|Q
prompt() {
    if [[ ${2^} = Q* ]]; then
        echo "$1"
        read -n1 a
        [[ ${a,} = 'q' ]] && return 0 || return 1
    elif [[ -z $2 || ${2^} = Y* ]]; then
        prompt='Y/n'
        default='Y'
    elif [[ ${2^} = N* ]]; then
        prompt='y/N'
        default='N'
    fi
    
    while true; do
        read -p "$1 [$prompt] " ans
        
        if [[ -z $ans ]]; then
            ans=$default
        fi
        
        if [[ ${ans^} = Y* ]]; then
            echo
            return 0
        elif [[ ${ans^} = N* ]]; then
            echo
            return 1
        fi
    done
}

# Check the connection by downloading a file from ftp.debian.org. No disk space used.
connectiontest() {
    TEXT_CHECKING='Checking internet connection...'
    TEXT_FAILED=$'Internet connection test failed!\n\nThis script requires a working internet connection. Please configure your internet connection, then hit any key to continue, else hit "q" to quit.'
    TEXT_ABORT='Script aborted.'
    TEXT_OK='Internet connection test passed!'

    say "$TEXT_CHECKING"
    while ! wget -O - http://ftp.debian.org/debian/README &> /dev/null; do
        say "$TEXT_FAILED"
        read -n1 a
        if [[ ${a,} = 'q' ]]; then
            say "$TEXT_ABORT" 2
            exit 1
        fi
        say "$TEXT_CHECKING" 0.3
    done
    say "$TEXT_OK" 1
}

menuStart() {
    echo '    <openbox_pipe_menu>'
}

# Usage: menuItem LABEL COMMAND
menuItem() {
    echo "        <item label=\"$1\">"
    echo '            <action name="Execute">'
    echo '                <command>'
    echo "                    $2"
    echo '                </command>'
    echo '            </action>'
    echo '        </item>'
}

menuSeparator() {
    echo '        <separator/>'
}


menuEnd() {
    echo '    </openbox_pipe_menu>'
}
